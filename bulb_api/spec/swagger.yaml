swagger: '2.0'
info:
  version: '0.1'
  title: bulb
  description: growth
host: dev.buttaface.space
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    scopes:
      uid: uid
    authorizationUrl: 'http://localhost:9090/auth'
paths:
  /auth:
    get:
      operationId: bulb_api.auth.validate_token
      summary: Validate Token
      tags:
        - Authentication
      description: |-
        This endpoint is used by connexion's OAuth2 support to validate a Bearer token passed in under the `Authorization` header to the API.

        Returns `200` for a valid token and `401` for an invalid one.
      parameters:
        - name: access_token
          in: query
          description: Bearer token vended by POST to `/auth`.
          required: true
          type: string
      responses:
        default:
          description: ''
          schema: {}
    post:
      operationId: bulb_api.auth.new_token
      summary: New Token
      tags:
        - Authentication
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                minLength: 8
                maxLength: 64
            required:
              - email
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              access_token:
                type: string
            required:
              - access_token
        '401':
          description: ''
        '404':
          description: ''
  '/tasks/{task_id}':
    parameters:
      - name: task_id
        in: path
        required: true
        type: string
    get:
      operationId: bulb_api.handlers.get_task
      summary: Get Task
      tags:
        - Tasks
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/task-output'
      security:
        - oauth2:
            - uid
    put:
      operationId: bulb_api.handlers.update_task
      summary: Update Task
      tags:
        - Tasks
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/task-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/task-output'
      security:
        - oauth2:
            - uid
    delete:
      operationId: bulb_api.handlers.delete_task
      summary: Delete Task
      tags:
        - Tasks
      responses:
        '204':
          description: ''
      security:
        - oauth2:
            - uid
  /tasks:
    get:
      operationId: bulb_api.handlers.list_tasks
      summary: List Tasks
      tags:
        - Tasks
      parameters:
        - $ref: '#/parameters/trait:paginated:offset'
        - $ref: '#/parameters/trait:paginated:limit'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/task-output'
      security:
        - oauth2:
            - uid
    post:
      operationId: bulb_api.handlers.create_task
      summary: Create Task
      tags:
        - Tasks
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/task-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/task-output'
      security:
        - oauth2:
            - uid
  '/documents/{doc_id}':
    parameters:
      - name: doc_id
        in: path
        required: true
        type: string
    get:
      operationId: bulb_api.handlers.get_document
      summary: Get Document
      tags:
        - Documents
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/document-output'
      security:
        - oauth2:
            - uid
    put:
      operationId: bulb_api.handlers.update_document
      summary: Update Document
      tags:
        - Documents
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/document-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/document-output'
      security:
        - oauth2:
            - uid
    delete:
      operationId: bulb_api.handlers.delete_document
      summary: Delete Document
      tags:
        - Documents
      responses:
        '204':
          description: ''
      security:
        - oauth2:
            - uid
  /documents:
    get:
      operationId: bulb_api.handlers.list_documents
      summary: List Documents
      tags:
        - Documents
      parameters:
        - $ref: '#/parameters/trait:paginated:offset'
        - $ref: '#/parameters/trait:paginated:limit'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/document-output'
      security:
        - oauth2:
            - uid
    post:
      operationId: bulb_api.handlers.create_document
      summary: Create Document
      tags:
        - Documents
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/document-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/document-output'
      security:
        - oauth2:
            - uid
  '/organizations/{org_id}':
    parameters:
      - name: org_id
        in: path
        required: true
        type: string
    get:
      operationId: bulb_api.handlers.get_organization
      summary: Get Organization
      tags:
        - Organizations
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/organization-output'
      security:
        - oauth2:
            - uid
    put:
      operationId: bulb_api.handlers.update_organization
      summary: Update Organization
      tags:
        - Organizations
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/organization-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/organization-output'
      security:
        - oauth2:
            - uid
    delete:
      operationId: bulb_api.handlers.delete_organization
      summary: Delete Organization
      tags:
        - Organizations
      responses:
        '204':
          description: ''
      security:
        - oauth2:
            - uid
  /organizations:
    get:
      operationId: bulb_api.handlers.list_organizations
      summary: List Organizations
      tags:
        - Organizations
      parameters:
        - $ref: '#/parameters/trait:paginated:offset'
        - $ref: '#/parameters/trait:paginated:limit'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/organization-output'
      security:
        - oauth2:
            - uid
    post:
      operationId: bulb_api.handlers.create_organization
      summary: Create Organization
      tags:
        - Organizations
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/organization-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/organization-output'
      security:
        - oauth2:
            - uid
  '/resources/{res_id}':
    parameters:
      - name: res_id
        in: path
        required: true
        type: string
    get:
      operationId: bulb_api.handlers.get_resource
      summary: Get Resource
      tags:
        - Resources
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/resource-output'
      security:
        - oauth2:
            - uid
    put:
      operationId: bulb_api.handlers.update_resource
      summary: Update Resource
      tags:
        - Resources
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/resource-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/resource-output'
      security:
        - oauth2:
            - uid
    delete:
      operationId: bulb_api.handlers.delete_resource
      summary: Delete Resource
      tags:
        - Resources
      responses:
        '204':
          description: ''
      security:
        - oauth2:
            - uid
  /resources:
    get:
      operationId: bulb_api.handlers.list_resources
      summary: List Resources
      tags:
        - Resources
      parameters:
        - $ref: '#/parameters/trait:paginated:offset'
        - $ref: '#/parameters/trait:paginated:limit'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/resource-output'
      security:
        - oauth2:
            - uid
    post:
      operationId: bulb_api.handlers.create_resource
      summary: Create Resource
      tags:
        - Resources
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/resource-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/resource-output'
      security:
        - oauth2:
            - uid
  '/users/{user_id}/init':
    parameters:
      - name: user_id
        in: path
        required: true
        type: string
    post:
      operationId: bulb_api.handlers.init_user
      summary: Initialize User
      tags:
        - Users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user-output'
  '/users/{user_id}':
    parameters:
      - name: user_id
        in: path
        required: true
        type: string
    get:
      operationId: bulb_api.handlers.get_user
      summary: Get User
      tags:
        - Users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user-output'
      security:
        - oauth2:
            - uid
    put:
      operationId: bulb_api.handlers.update_user
      summary: Update User
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/user-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user-output'
      security:
        - oauth2:
            - uid
    delete:
      operationId: bulb_api.handlers.delete_user
      summary: Delete User
      tags:
        - Users
      responses:
        '204':
          description: ''
      security:
        - oauth2:
            - uid
  /users:
    get:
      operationId: bulb_api.handlers.list_users
      summary: List Users
      tags:
        - Users
      parameters:
        - $ref: '#/parameters/trait:paginated:offset'
        - $ref: '#/parameters/trait:paginated:limit'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/user-output'
      security:
        - oauth2:
            - uid
    post:
      operationId: bulb_api.handlers.create_user
      summary: Create User
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/user-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/user-output'
parameters:
  'trait:paginated:offset':
    name: offset
    in: query
    description: Offset from which to start list of returned values.
    type: integer
    default: 0
    minimum: 0
  'trait:paginated:limit':
    name: limit
    in: query
    description: 'Maximum number of items to return. This should be an integer on the interval [0,500]. This parameter''s absence indicates no limit.'
    type: number
    minimum: 0
    maximum: 500
responses:
  'trait:standardErrors:404':
    description: ''
    schema:
      type:
        - object
        - string
      description: Entity not found.
      additionalProperties: false
  'trait:standardErrors:500':
    description: ''
    schema:
      type:
        - object
        - string
      description: Internal server error.
      additionalProperties: false
definitions:
  document:
    title: Document
    type: object
    additionalProperties: false
    properties:
      doc_id:
        type: string
        format: uuid
        description: UUID for the document. This value is guaranteed to be unique amongst documents
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing document creation time.
      org_id:
        type: string
        format: uuid
        description: UUID of Organization with which the Document is associated.
      uri:
        type: string
        format: uri
        description: URI where the actual Document is located.
      due_date:
        type: string
        format: date-time
        description: Datetime representing when the Document it due.
      progress:
        type: number
        default: 0
        minimum: 0
        maximum: 1
        description: 'Decimal numer on the interval [0,1] representing the progress towards completion of the Document as a percentage.'
      status:
        type: string
        default: NOT_STARTED
        enum:
          - NOT_STARTED
          - IN_PROGRESS
          - DONE
          - NOT_APPLICAPLE
      name:
        type: string
        pattern: '^[A-Za-z0-9_ -]+'
      type:
        type: string
        enum:
          - GUIDE
          - TEMPLATE
          - FORM
      note:
        type: string
        maxLength: 140
        description: A short note to be attached to the document.
    example:
      doc_id: 476b329e-feb6-4237-a3ca-7844b1d0b598
      create_datetime: '2016-07-11T12:16:06Z'
      org_id: 0e8eadfa-c8c6-4eae-a256-f9093b85662d
      uri: 'https://bulb-documents.s3.amazonaws.com/410741ff-e2f1-4b42-a4de-84cd91129371'
      due_date: '2017-04-26T22:21:23Z'
      progress: 0.33
      status: DONE
      name: state tax filing 2017
      type: FORM
      note: this is our master document for tax season '17. pilfering washington politicians...
  document-readonly:
    title: Document ReadOnly
    type: object
    additionalProperties: false
    properties:
      doc_id:
        type: string
        format: uuid
        description: UUID for the document. This value is guaranteed to be unique amongst documents
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing document creation time.
      org_id:
        type: string
        format: uuid
        description: UUID of Organization with which the Document is associated.
      uri:
        type: string
        format: uri
        description: URI where the actual Document is located.
      due_date:
        type: string
        format: date-time
        description: Datetime representing when the Document it due.
      progress:
        type: number
        default: 0
        minimum: 0
        maximum: 1
        description: 'Decimal numer on the interval [0,1] representing the progress towards completion of the Document as a percentage.'
      status:
        type: string
        default: NOT_STARTED
        enum:
          - NOT_STARTED
          - IN_PROGRESS
          - DONE
          - NOT_APPLICAPLE
      name:
        type: string
        pattern: '^[A-Za-z0-9_ -]+'
      type:
        type: string
        enum:
          - GUIDE
          - TEMPLATE
          - FORM
      note:
        type: string
        maxLength: 140
        description: A short note to be attached to the document.
    required:
      - doc_id
      - create_datetime
      - org_id
      - uri
      - status
      - name
    example:
      doc_id: 476b329e-feb6-4237-a3ca-7844b1d0b598
      create_datetime: '2016-07-11T12:16:06Z'
      org_id: 0e8eadfa-c8c6-4eae-a256-f9093b85662d
      uri: 'https://bulb-documents.s3.amazonaws.com/410741ff-e2f1-4b42-a4de-84cd91129371'
      due_date: '2017-04-26T22:21:23Z'
      progress: 0.33
      status: DONE
      name: state tax filing 2017
      type: FORM
      note: this is our master document for tax season '17. pilfering washington politicians...
  organization:
    title: Organization
    type: object
    additionalProperties: false
    properties:
      org_id:
        type: string
        format: uuid
        description: UUID for the organization. This value is guaranteed to be unique amongst organizations
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing organization creation time.
      type:
        type: string
        enum:
          - BUYER
          - VENDOR
        default: BUYER
      name:
        type: string
        pattern: '[a-zA-Z0-9-_ '']+'
      users:
        type: array
        description: list of users (by `user_id` ) who are members of the organization.
        uniqueItems: true
        minItems: 1
        maxItems: 100
        items:
          type: string
          format: uuid
    example:
      org_id: f29d61da-e7b3-4577-b426-c6660d38f97c
      create_datetime: '2015-04-17T20:50:36Z'
      type: BUYER
      name: bob's burgers
      users:
        - b85769c0-5b80-4759-ae06-5881e8c85d77
        - af125212-7e30-47be-b932-9baf821a615f
        - af93193a-9e57-4430-8c4e-623d9c4549d1
  organization-readonly:
    title: Organization ReadOnly
    type: object
    additionalProperties: false
    properties:
      org_id:
        type: string
        format: uuid
        description: UUID for the organization. This value is guaranteed to be unique amongst organizations
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing organization creation time.
      type:
        type: string
        enum:
          - BUYER
          - VENDOR
        default: BUYER
      name:
        type: string
        pattern: '[a-zA-Z0-9-_ '']+'
      users:
        type: array
        description: list of users (by `user_id` ) who are members of the organization.
        uniqueItems: true
        minItems: 1
        maxItems: 100
        items:
          type: string
          format: uuid
    required:
      - org_id
      - create_datetime
      - type
      - name
      - users
    example:
      org_id: f29d61da-e7b3-4577-b426-c6660d38f97c
      create_datetime: '2015-04-17T20:50:36Z'
      type: BUYER
      name: bob's burgers
      users:
        - b85769c0-5b80-4759-ae06-5881e8c85d77
        - af125212-7e30-47be-b932-9baf821a615f
        - af93193a-9e57-4430-8c4e-623d9c4549d1
  resource:
    title: Resource
    type: object
    additionalProperties: false
    properties:
      res_id:
        type: string
        format: uuid
        description: UUID for the resource. This value is guaranteed to be unique amongst resources.
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing resource creation time.
      name:
        type: string
        pattern: '^[A-Za-z0-9_ -]+'
      url:
        type: string
        format: uri
        description: 'TODO: deduplicate this property with Document.uri'
      mailto_uri:
        type: string
        pattern: '^mailto:.+\@.+\..+$'
      s3_thumbnail_uri:
        type: string
        format: uri
      org_id:
        type: string
        format: uuid
    example:
      res_id: d8603e76-5d49-48e3-b6c4-35e61622675a
      create_datetime: '2016-08-07T12:52:08Z'
      name: Maryland Chamber of Commerce
      url: 'https://www.mdchamber.org/'
      s3_thumbnail_uri: 'https://bulb-resources.s3.amazonaws.com/MD_Chamber_of_Commerce.png'
      mailto_uri: 'mailto:jpalmeri@mdchamber.org'
      org_id: 2ff16c3c-64f5-4ed2-8473-6ad789b1162b
  resource-readonly:
    title: Resource ReadOnly
    type: object
    additionalProperties: false
    properties:
      res_id:
        type: string
        format: uuid
        description: UUID for the resource. This value is guaranteed to be unique amongst resources.
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing resource creation time.
      name:
        type: string
        pattern: '^[A-Za-z0-9_ -]+'
      url:
        type: string
        format: uri
        description: 'TODO: deduplicate this property with Document.uri'
      mailto_uri:
        type: string
        pattern: '^mailto:.+\@.+\..+$'
      s3_thumbnail_uri:
        type: string
        format: uri
      org_id:
        type: string
        format: uuid
    required:
      - res_id
      - create_datetime
      - name
      - url
      - org_id
    example:
      res_id: d8603e76-5d49-48e3-b6c4-35e61622675a
      create_datetime: '2016-08-07T12:52:08Z'
      name: Maryland Chamber of Commerce
      url: 'https://www.mdchamber.org/'
      s3_thumbnail_uri: 'https://bulb-resources.s3.amazonaws.com/MD_Chamber_of_Commerce.png'
      mailto_uri: 'mailto:jpalmeri@mdchamber.org'
      org_id: 2ff16c3c-64f5-4ed2-8473-6ad789b1162b
  task:
    title: Task
    type: object
    description: ''
    properties:
      org_id:
        type: string
        format: uuid
      name:
        type: string
        description: The task's display name.a
      priority:
        type: number
        minimum: 0
        exclusiveMinimum: false
        maximum: 1
        description: 'Task''s priority, expressed on the interval [0,1]. i.e., x | x ∈ R, x ∈ [0,1].'
      status:
        type: string
        enum:
          - NOT_STARTED
          - IN_PROGRESS
          - COMPLETE
        description: The completion status of the task.
      workspaces:
        type: array
        description: 'Which workspace '
        uniqueItems: true
        items:
          type: string
          enum:
            - FORMATION
            - TAX
            - COMPLIANCE
            - FINANCE
            - REAL_ESTATE
            - STRUCTURAL
            - INVENTORY
            - EQUIPMENT
            - OPERATIONS
            - EMPLOYEES
            - INSURANCE
            - MARKETING
      url:
        type: string
        description: The URL of our static/informational resource associated with the task.
        format: uri
      create_datetime:
        type: string
        description: datetime string representing document creation time.
        format: date-time
      task_id:
        type: string
        format: uuid
        description: The task's unique ID.
    example:
      task_id: 46ebb76f-0dc9-4448-8db4-8b20a0a253fb
      org_id: 46ebb76f-0dc9-4448-8db4-8b20a0a253fb
      name: Create Business Plan
      priority: 0
      status: NOT_STARTED
      workspaces:
        - FORMATION
      url: 'https://static.bulb.co/formation/business_plan'
      create_datetime: '4886-08-13T12:30:15.427Z'
  task-readonly:
    title: Task ReadOnly
    type: object
    description: ''
    properties:
      org_id:
        type: string
        format: uuid
      name:
        type: string
        description: The task's display name.a
      priority:
        type: number
        minimum: 0
        exclusiveMinimum: false
        maximum: 1
        description: 'Task''s priority, expressed on the interval [0,1]. i.e., x | x ∈ R, x ∈ [0,1].'
      status:
        type: string
        enum:
          - NOT_STARTED
          - IN_PROGRESS
          - COMPLETE
        description: The completion status of the task.
      workspaces:
        type: array
        description: 'Which workspace '
        uniqueItems: true
        items:
          type: string
          enum:
            - FORMATION
            - TAX
            - COMPLIANCE
            - FINANCE
            - REAL_ESTATE
            - STRUCTURAL
            - INVENTORY
            - EQUIPMENT
            - OPERATIONS
            - EMPLOYEES
            - INSURANCE
            - MARKETING
      url:
        type: string
        description: The URL of our static/informational resource associated with the task.
        format: uri
      create_datetime:
        type: string
        description: datetime string representing document creation time.
        format: date-time
      task_id:
        type: string
        format: uuid
        description: The task's unique ID.
    required:
      - org_id
      - name
      - priority
      - status
      - workspaces
      - create_datetime
      - task_id
    example:
      task_id: 46ebb76f-0dc9-4448-8db4-8b20a0a253fb
      org_id: 46ebb76f-0dc9-4448-8db4-8b20a0a253fb
      name: Create Business Plan
      priority: 0
      status: NOT_STARTED
      workspaces:
        - FORMATION
      url: 'https://static.bulb.co/formation/business_plan'
      create_datetime: '4886-08-13T12:30:15.427Z'
  user:
    title: User
    type: object
    additionalProperties: false
    properties:
      user_id:
        type: string
        format: uuid
        description: UUID for the user. This value is guaranteed to be unique amongst users.
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing user creation time.
      email:
        type: string
        format: email
      org_id:
        type: string
        description: uuid of organization that the user is a member of.
        format: uuid
      name:
        type: string
        pattern: '^[A-Za-z-_ ]+'
      password:
        type: string
    example:
      user_id: 4c1fb4fe-b4f0-4b90-bb1d-e36c8cac9ef0
      create_datetime: '2967-10-01T11:33:21Z'
      email: bob@bobsburgers.com
      org_id: c0d803db-8ab2-429c-bfa1-b17afdd18b5d
      name: bob
  user-readonly:
    title: User ReadOnly
    type: object
    additionalProperties: false
    properties:
      user_id:
        type: string
        format: uuid
        description: UUID for the user. This value is guaranteed to be unique amongst users.
      create_datetime:
        type: string
        format: date-time
        description: datetime string representing user creation time.
      email:
        type: string
        format: email
      org_id:
        type: string
        description: UUID of organization that the user is a member of.
        format: uuid
      name:
        type: string
        pattern: '^[A-Za-z-_ ]+'
    required:
      - user_id
      - create_datetime
      - email
      - name
    example:
      user_id: 4c1fb4fe-b4f0-4b90-bb1d-e36c8cac9ef0
      create_datetime: '2967-10-01T11:33:21Z'
      email: bob@bobsburgers.com
      org_id: c0d803db-8ab2-429c-bfa1-b17afdd18b5d
      name: bob
  user-input:
    title: User Input
    $ref: '#/definitions/user'
  user-output:
    title: User Output
    allOf:
      - $ref: '#/definitions/user-readonly'
      - $ref: '#/definitions/user-input'
  organization-input:
    title: Organization Input
    $ref: '#/definitions/organization'
  organization-output:
    title: Organization Output
    allOf:
      - $ref: '#/definitions/organization-readonly'
      - $ref: '#/definitions/organization-input'
  document-input:
    title: Document Input
    $ref: '#/definitions/document'
  document-output:
    title: Document Output
    allOf:
      - $ref: '#/definitions/document-readonly'
      - $ref: '#/definitions/document-input'
  resource-input:
    title: Resource Input
    $ref: '#/definitions/resource'
  resource-output:
    title: Resource Output
    allOf:
      - $ref: '#/definitions/resource-readonly'
      - $ref: '#/definitions/resource-input'
  task-input:
    title: Task Input
    $ref: '#/definitions/task'
  task-output:
    title: Task Output
    allOf:
      - $ref: '#/definitions/task-readonly'
      - $ref: '#/definitions/task-input'